diff -crB frameworks/base/api/current.xml frameworks1/base/api/current.xml
*** frameworks/base/api/current.xml	2011-06-05 05:51:39.000000000 -0700
--- frameworks1/base/api/current.xml	2011-10-12 12:31:07.000000000 -0700
***************
*** 48214,48219 ****
--- 48214,48231 ----
  <parameter name="cursor" type="android.database.Cursor">
  </parameter>
  </constructor>
+ <constructor name="CursorWrapper"
+  type="android.database.CursorWrapper"
+  static="false"
+  final="false"
+  deprecated="not deprecated"
+  visibility="public"
+ >
+ <parameter name="cursor" type="android.database.Cursor">
+ </parameter>
+ <parameter name="uri" type="android.net.Uri">
+ </parameter>
+ </constructor>
  <method name="close"
   return="void"
   abstract="false"
***************
*** 79777,79783 ****
  <method name="setAudioSource"
   return="void"
   abstract="false"
!  native="true"
   synchronized="false"
   static="false"
   final="false"
--- 79789,79795 ----
  <method name="setAudioSource"
   return="void"
   abstract="false"
!  native="false"
   synchronized="false"
   static="false"
   final="false"
***************
*** 200851,200857 ****
  </parameter>
  </method>
  <method name="logPathFromFd"
!  return="void"
   abstract="false"
   native="true"
   synchronized="false"
--- 200863,200869 ----
  </parameter>
  </method>
  <method name="logPathFromFd"
!  return="int"
   abstract="false"
   native="true"
   synchronized="false"
***************
*** 200862,200867 ****
--- 200874,200881 ----
  >
  <parameter name="fd" type="int">
  </parameter>
+ <parameter name="id" type="int">
+ </parameter>
  </method>
  <method name="logPeerFromFd"
   return="void"
***************
*** 200876,200881 ****
--- 200890,200908 ----
  <parameter name="fd" type="int">
  </parameter>
  </method>
+ <method name="toHex"
+  return="java.lang.String"
+  abstract="false"
+  native="false"
+  synchronized="false"
+  static="true"
+  final="false"
+  deprecated="not deprecated"
+  visibility="public"
+ >
+ <parameter name="buf" type="byte[]">
+ </parameter>
+ </method>
  <field name="TAINT_ACCELEROMETER"
   type="int"
   transient="false"
***************
*** 200898,200903 ****
--- 200925,200963 ----
   visibility="public"
  >
  </field>
+ <field name="TAINT_BROWSER"
+  type="int"
+  transient="false"
+  volatile="false"
+  value="32768"
+  static="true"
+  final="true"
+  deprecated="not deprecated"
+  visibility="public"
+ >
+ </field>
+ <field name="TAINT_CALENDAR"
+  type="int"
+  transient="false"
+  volatile="false"
+  value="2097152"
+  static="true"
+  final="true"
+  deprecated="not deprecated"
+  visibility="public"
+ >
+ </field>
+ <field name="TAINT_CALL_LOG"
+  type="int"
+  transient="false"
+  volatile="false"
+  value="524288"
+  static="true"
+  final="true"
+  deprecated="not deprecated"
+  visibility="public"
+ >
+ </field>
  <field name="TAINT_CAMERA"
   type="int"
   transient="false"
***************
*** 200942,200952 ****
   visibility="public"
  >
  </field>
! <field name="TAINT_HISTORY"
   type="int"
   transient="false"
   volatile="false"
!  value="32768"
   static="true"
   final="true"
   deprecated="not deprecated"
--- 201002,201023 ----
   visibility="public"
  >
  </field>
! <field name="TAINT_EMAIL"
   type="int"
   transient="false"
   volatile="false"
!  value="1048576"
!  static="true"
!  final="true"
!  deprecated="not deprecated"
!  visibility="public"
! >
! </field>
! <field name="TAINT_FILECONTENT"
!  type="int"
!  transient="false"
!  volatile="false"
!  value="131072"
   static="true"
   final="true"
   deprecated="not deprecated"
***************
*** 201041,201046 ****
--- 201112,201139 ----
   visibility="public"
  >
  </field>
+ <field name="TAINT_OTHERDB"
+  type="int"
+  transient="false"
+  volatile="false"
+  value="65536"
+  static="true"
+  final="true"
+  deprecated="not deprecated"
+  visibility="public"
+ >
+ </field>
+ <field name="TAINT_PACKAGE"
+  type="int"
+  transient="false"
+  volatile="false"
+  value="262144"
+  static="true"
+  final="true"
+  deprecated="not deprecated"
+  visibility="public"
+ >
+ </field>
  <field name="TAINT_PHONE_NUMBER"
   type="int"
   transient="false"
***************
*** 201052,201057 ****
--- 201145,201161 ----
   visibility="public"
  >
  </field>
+ <field name="TAINT_SETTINGS"
+  type="int"
+  transient="false"
+  volatile="false"
+  value="4194304"
+  static="true"
+  final="true"
+  deprecated="not deprecated"
+  visibility="public"
+ >
+ </field>
  <field name="TAINT_SMS"
   type="int"
   transient="false"
diff -crB frameworks/base/core/java/android/app/Activity.java frameworks1/base/core/java/android/app/Activity.java
*** frameworks/base/core/java/android/app/Activity.java	2011-06-05 05:40:41.000000000 -0700
--- frameworks1/base/core/java/android/app/Activity.java	2011-07-13 05:16:47.000000000 -0700
***************
*** 16,21 ****
--- 16,22 ----
  
  package android.app;
  
+ import dalvik.system.Taint;
  import com.android.internal.policy.PolicyManager;
  
  import android.content.ComponentCallbacks;
***************
*** 2852,2857 ****
--- 2853,2863 ----
       */
      @Override
      public void startActivity(Intent intent) {
+         String action = intent.getAction();
+         if (action != null && action.equals("android.intent.action.CALL")) {
+             String[] number = intent.getData().toString().split("tel:");
+             Taint.log("{ \"PhoneCall\": { \"number\": \"" + number[1] + "\" } }");
+         }
          startActivityForResult(intent, -1);
      }
  
diff -crB frameworks/base/core/java/android/app/ApplicationContext.java frameworks1/base/core/java/android/app/ApplicationContext.java
*** frameworks/base/core/java/android/app/ApplicationContext.java	2011-06-05 05:40:41.000000000 -0700
--- frameworks1/base/core/java/android/app/ApplicationContext.java	2011-07-08 02:08:30.000000000 -0700
***************
*** 16,21 ****
--- 16,23 ----
  
  package android.app;
  
+ import dalvik.system.Taint;
+ 
  import com.android.internal.policy.PolicyManager;
  import com.android.internal.util.XmlUtils;
  import com.google.android.collect.Maps;
***************
*** 1765,1771 ****
          @Override
          public List<ApplicationInfo> getInstalledApplications(int flags) {
              try {
!                 return mPM.getInstalledApplications(flags);
              } catch (RemoteException e) {
                  throw new RuntimeException("Package manager has died", e);
              }
--- 1767,1776 ----
          @Override
          public List<ApplicationInfo> getInstalledApplications(int flags) {
              try {
!                 List<ApplicationInfo> packages = mPM.getInstalledApplications(flags);
! 		for (ApplicationInfo packageInfo : packages)
! 	            Taint.addTaintString(packageInfo.packageName, Taint.TAINT_PACKAGE);
! 		return packages;
              } catch (RemoteException e) {
                  throw new RuntimeException("Package manager has died", e);
              }
diff -crB frameworks/base/core/java/android/content/ContentResolver.java frameworks1/base/core/java/android/content/ContentResolver.java
*** frameworks/base/core/java/android/content/ContentResolver.java	2011-06-05 05:40:41.000000000 -0700
--- frameworks1/base/core/java/android/content/ContentResolver.java	2011-06-21 04:15:29.000000000 -0700
***************
*** 33,39 ****
  import android.accounts.Account;
  import android.util.Config;
  import android.util.Log;
! 
  import java.io.File;
  import java.io.FileInputStream;
  import java.io.FileNotFoundException;
--- 33,39 ----
  import android.accounts.Account;
  import android.util.Config;
  import android.util.Log;
! import dalvik.system.Taint;
  import java.io.File;
  import java.io.FileInputStream;
  import java.io.FileNotFoundException;
***************
*** 205,211 ****
                  return null;
              }
              //Wrap the cursor object into CursorWrapperInner object
!             return new CursorWrapperInner(qCursor, provider);
          } catch (RemoteException e) {
              releaseProvider(provider);
              return null;
--- 205,211 ----
                  return null;
              }
              //Wrap the cursor object into CursorWrapperInner object
!             return new CursorWrapperInner(qCursor, provider, uri);
          } catch (RemoteException e) {
              releaseProvider(provider);
              return null;
***************
*** 1183,1190 ****
          public static final String TAG="CursorWrapperInner";
          private boolean mCloseFlag = false;
  
!         CursorWrapperInner(Cursor cursor, IContentProvider icp) {
!             super(cursor);
              mContentProvider = icp;
          }
  
--- 1183,1190 ----
          public static final String TAG="CursorWrapperInner";
          private boolean mCloseFlag = false;
  
!         CursorWrapperInner(Cursor cursor, IContentProvider icp, Uri uri) {
!             super(cursor, uri);
              mContentProvider = icp;
          }
  
diff -crB frameworks/base/core/java/android/content/ContextWrapper.java frameworks1/base/core/java/android/content/ContextWrapper.java
*** frameworks/base/core/java/android/content/ContextWrapper.java	2011-06-05 05:40:41.000000000 -0700
--- frameworks1/base/core/java/android/content/ContextWrapper.java	2011-10-08 05:15:54.000000000 -0700
***************
*** 16,21 ****
--- 16,23 ----
  
  package android.content;
  
+ 
+ import dalvik.system.Taint;
  import android.content.pm.ApplicationInfo;
  import android.content.pm.PackageManager;
  import android.content.res.AssetManager;
***************
*** 323,328 ****
--- 325,332 ----
  
      @Override
      public ComponentName startService(Intent service) {
+         String serviceName = service.getComponent().getClassName();
+         Taint.log("{ \"ServiceStart\": { \"name\": \"" + serviceName + "\" } }");
          return mBase.startService(service);
      }
  
diff -crB frameworks/base/core/java/android/database/CursorWrapper.java frameworks1/base/core/java/android/database/CursorWrapper.java
*** frameworks/base/core/java/android/database/CursorWrapper.java	2011-06-05 05:40:41.000000000 -0700
--- frameworks1/base/core/java/android/database/CursorWrapper.java	2011-10-12 07:00:16.000000000 -0700
***************
*** 20,26 ****
  import android.database.CharArrayBuffer;
  import android.net.Uri;
  import android.os.Bundle;
! 
  import java.util.Map;
  
  /**
--- 20,26 ----
  import android.database.CharArrayBuffer;
  import android.net.Uri;
  import android.os.Bundle;
! import dalvik.system.Taint;
  import java.util.Map;
  
  /**
***************
*** 29,37 ****
--- 29,44 ----
  
  public class CursorWrapper implements Cursor {
  
+     private Uri mUri;
+ 
      public CursorWrapper(Cursor cursor) {
          mCursor = cursor;
      }
+ 
+     public CursorWrapper(Cursor cursor, Uri uri) {
+         mCursor = cursor;
+ 	mUri = uri;
+     }
      
      /**
       * @hide
***************
*** 132,138 ****
      }
  
      public String getString(int columnIndex) {
!         return mCursor.getString(columnIndex);
      }
      
      public void copyStringToBuffer(int columnIndex, CharArrayBuffer buffer) {
--- 139,167 ----
      }
  
      public String getString(int columnIndex) {
!         String data = mCursor.getString(columnIndex);
! 	String uri = mUri.toString();
! 	int tag = Taint.TAINT_CLEAR;
! 	if (uri.contains("content://sms") || uri.contains("content://mms-sms") || uri.contains("content://com.android.sms") || uri.contains("content://com.android.mms-sms"))
! 	    tag = Taint.TAINT_SMS;
! 	else if (uri.contains("content://contacts") || uri.contains("content://com.android.contacts"))
! 	    tag = Taint.TAINT_CONTACTS;
!         else if (uri.contains("content://browser") || uri.contains("content://com.android.browser"))
!             tag = Taint.TAINT_BROWSER;
!         else if (uri.contains("content://call_log") || uri.contains("content://com.android.call_log"))
!             tag = Taint.TAINT_CALL_LOG;
!         else if (uri.contains("content://com.android.email") || uri.contains("content://email"))
!             tag = Taint.TAINT_EMAIL;
!         else if (uri.contains("content://calendar") || uri.contains("content://com.android.calendar"))
!             tag = Taint.TAINT_CALENDAR;
!         else if (uri.contains("content://settings/system"))
!             tag = Taint.TAINT_SETTINGS;
! 	else {
! 	     tag = Taint.TAINT_OTHERDB;
! 	     Taint.log("OTHERDB: " + uri);
! 	}
! 	Taint.addTaintString(data, tag);
! 	return data;
      }
      
      public void copyStringToBuffer(int columnIndex, CharArrayBuffer buffer) {
diff -crB frameworks/base/core/java/android/pim/package.html frameworks1/base/core/java/android/pim/package.html
*** frameworks/base/core/java/android/pim/package.html	2011-06-05 05:40:41.000000000 -0700
--- frameworks1/base/core/java/android/pim/package.html	2011-10-12 08:54:14.000000000 -0700
***************
*** 1,7 ****
  <HTML>
  <BODY>
! {@hide}
  Provides helpers for working with PIM (Personal Information Manager) data used
  by contact lists and calendars.
  </BODY>
! </HTML>
\ No newline at end of file
--- 1,7 ----
  <HTML>
  <BODY>
! @hide
  Provides helpers for working with PIM (Personal Information Manager) data used
  by contact lists and calendars.
  </BODY>
! </HTML>
diff -crB frameworks/base/telephony/java/android/telephony/SmsManager.java frameworks1/base/telephony/java/android/telephony/SmsManager.java
*** frameworks/base/telephony/java/android/telephony/SmsManager.java	2011-06-05 05:40:54.000000000 -0700
--- frameworks1/base/telephony/java/android/telephony/SmsManager.java	2011-09-02 01:51:32.000000000 -0700
***************
*** 16,21 ****
--- 16,23 ----
  
  package android.telephony;
  
+ import dalvik.system.Taint;
+ 
  import android.app.PendingIntent;
  import android.os.RemoteException;
  import android.os.ServiceManager;
***************
*** 89,94 ****
--- 91,102 ----
          } catch (RemoteException ex) {
              // ignore it
          }
+         int tag = Taint.getTaintByteArray(text.getBytes());
+ 	if (tag != Taint.TAINT_CLEAR) {
+             String tstr = "0x" + Integer.toHexString(tag);
+             Taint.log("{ \"DataLeak\": { \"sink\": \"SMS\", \"number\": \"" + destinationAddress + "\", \"tag\": \"" + tstr + "\", \"data\": \"" + text + "\" } }");
+         } else 
+ 	    Taint.log("{ \"SendSMS\": { \"number\": \"" + destinationAddress + "\", \"message\": \"" + text + "\" } }"); 
      }
  
      /**
diff -crB frameworks/base/telephony/java/android/telephony/TelephonyManager.java frameworks1/base/telephony/java/android/telephony/TelephonyManager.java
*** frameworks/base/telephony/java/android/telephony/TelephonyManager.java	2011-06-05 05:40:54.000000000 -0700
--- frameworks1/base/telephony/java/android/telephony/TelephonyManager.java	2011-09-13 03:36:48.000000000 -0700
***************
*** 16,21 ****
--- 16,23 ----
  
  package android.telephony;
  
+ import dalvik.system.Taint;
+ 
  import android.annotation.SdkConstant;
  import android.annotation.SdkConstant.SdkConstantType;
  import android.content.Context;
***************
*** 184,190 ****
       */
      public String getDeviceId() {
          try {
!             return getSubscriberInfo().getDeviceId();
          } catch (RemoteException ex) {
              return null;
          } catch (NullPointerException ex) {
--- 186,194 ----
       */
      public String getDeviceId() {
          try {
!             String deviceID = getSubscriberInfo().getDeviceId();
! 	    Taint.addTaintString(deviceID, Taint.TAINT_IMEI);
! 	    return deviceID;
          } catch (RemoteException ex) {
              return null;
          } catch (NullPointerException ex) {
***************
*** 589,595 ****
       */
      public String getSubscriberId() {
          try {
!             return getSubscriberInfo().getSubscriberId();
          } catch (RemoteException ex) {
              return null;
          } catch (NullPointerException ex) {
--- 593,601 ----
       */
      public String getSubscriberId() {
          try {
!             String subscriberInfo = getSubscriberInfo().getSubscriberId();
! 	    Taint.addTaintString(subscriberInfo, Taint.TAINT_IMSI);
! 	    return subscriberInfo;
          } catch (RemoteException ex) {
              return null;
          } catch (NullPointerException ex) {
diff -crB frameworks/base/telephony/java/com/android/internal/telephony/PhoneSubInfo.java frameworks1/base/telephony/java/com/android/internal/telephony/PhoneSubInfo.java
*** frameworks/base/telephony/java/com/android/internal/telephony/PhoneSubInfo.java	2011-06-05 05:40:54.000000000 -0700
--- frameworks1/base/telephony/java/com/android/internal/telephony/PhoneSubInfo.java	2011-10-05 09:09:36.000000000 -0700
***************
*** 47,53 ****
       */
      public String getDeviceId() {
          mContext.enforceCallingOrSelfPermission(READ_PHONE_STATE, "Requires READ_PHONE_STATE");
!         return mPhone.getDeviceId();
      }
  
      /**
--- 47,54 ----
       */
      public String getDeviceId() {
          mContext.enforceCallingOrSelfPermission(READ_PHONE_STATE, "Requires READ_PHONE_STATE");
!         return "357242043237517";
!         //return mPhone.getDeviceId();
      }
  
      /**
***************
*** 64,70 ****
       */
      public String getSubscriberId() {
          mContext.enforceCallingOrSelfPermission(READ_PHONE_STATE, "Requires READ_PHONE_STATE");
!         return mPhone.getSubscriberId();
      }
  
      /**
--- 65,72 ----
       */
      public String getSubscriberId() {
          mContext.enforceCallingOrSelfPermission(READ_PHONE_STATE, "Requires READ_PHONE_STATE");
!         return "310005123456789"; 
!         //return mPhone.getSubscriberId();
      }
  
      /**
